<launch>
    
    <arg name="first_robot" default="robot1"/>
    <arg name="first_robot_x_pos" default="0"/>
    <arg name="first_robot_y_pos" default="0"/>
    <arg name="first_robot_z_pos" default=" 0.0"/>
    <arg name="first_robot_yaw" default=" 0"/>

    <group ns = "$(arg first_robot)">
         <!--Robot description to param server-->
        <param name="robot_description" command="$(find xacro)/xacro.py '$(find neo_simulation)/robots/mpo_500/mpo_500.urdf.xacro'"/>
          <!--To publish Joint and Robot state-->
        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
            <param name="publish_frequency" type="double" value="20.0" /> 
        </node>
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
            <param name="rate" value="20.0"/>
        </node>
    
         <!--To spawn robot-->
         <node name="mpo_500_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
  args="-urdf -model $(arg first_robot) -x $(arg first_robot_x_pos) -y $(arg first_robot_y_pos) -z $(arg first_robot_z_pos) -Y $(arg first_robot_yaw) -param robot_description" />
         <!--To create link broadcaster  -->
        <param name="tf_prefix" value="$(arg first_robot)" /> 
        <node pkg="tf" type="static_transform_publisher" name="link_broadcaster" args="first_robot_x_pos first_robot_y_pos first_robot_z_pos first_robot_yaw 0 0 /map /$(arg first_robot)/odom 100" /> 
        
        <!--Call scan unifier node  -->
        <!-- parameters -->
	    <rosparam command="load" ns="cob_scan_unifier" file="$(find neo_simulation)/config/mpo_500/scan_unifier/unifier_robot1.yaml"/>
	    <!-- start node -->
	    <node pkg="cob_scan_unifier" type="scan_unifier_node" name="scan_unifier_node" ns="cob_scan_unifier" respawn="false" output="screen" >
	    </node>
       

    </group>
   
</launch>